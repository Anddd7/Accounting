<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reengineering.ddd.accounting.mybatis.mapper.CustomerMapper">
    <resultMap id="customerDescription" type="reengineering.ddd.accounting.description.CustomerDescription">
        <constructor>
            <arg column="name" jdbcType="VARCHAR" javaType="String"/>
            <arg column="email" jdbcType="VARCHAR" javaType="String"/>
        </constructor>
    </resultMap>

    <resultMap id="accountDescription" type="reengineering.ddd.accounting.description.AccountDescription">
        <constructor>
            <arg resultMap="reengineering.ddd.accounting.mybatis.mapper.SourceEvidenceMapper.amount"
                 javaType="reengineering.ddd.accounting.description.basic.Amount"
                 columnPrefix="current_"/>
        </constructor>
    </resultMap>

    <resultMap id="account" type="reengineering.ddd.accounting.model.Account">
        <id property="identity" column="account_id" jdbcType="BIGINT" javaType="String"/>
        <association property="description" resultMap="accountDescription" columnPrefix="account_"/>
    </resultMap>

    <resultMap id="customer" type="reengineering.ddd.accounting.model.Customer">
        <id property="identity" column="id" jdbcType="BIGINT" javaType="String"/>
        <association property="description" resultMap="customerDescription"/>
        <association property="sourceEvidences" resultMap="sourceEvidences"/>
        <association property="accounts" resultMap="accounts"/>
    </resultMap>

    <resultMap id="sourceEvidences" type="reengineering.ddd.accounting.mybatis.model.CustomerSourceEvidences">
        <result column="id" property="customerId" javaType="String"/>
    </resultMap>

    <resultMap id="accounts" type="reengineering.ddd.accounting.mybatis.model.CustomerAccounts">
        <collection property="accounts" resultMap="account" ofType="reengineering.ddd.accounting.model.Account"/>
    </resultMap>

    <select id="findById" resultMap="customer">
        select c.id               as id,
               c.name             as name,
               c.email            as email,
               a.id               as account_id,
               a.current_amount   as account_current_amount,
               a.current_currency as account_current_currency
        from customers c
                 left outer join accounts a on a.customer_id = c.id
        where c.id = #{id}
    </select>
</mapper>